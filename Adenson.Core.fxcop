<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="Adenson.Core">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">$(FxCopDir)\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/bin/Debug/Adenson.Core.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="False" AllRulesEnabled="False" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="CompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="DoNotNameEnumValuesReserved" Enabled="True" />
    <Rule Name="DoNotPrefixEnumValuesWithTypeName" Enabled="True" />
    <Rule Name="EventsShouldNotHaveBeforeOrAfterPrefix" Enabled="True" />
    <Rule Name="FlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="IdentifiersShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="IdentifiersShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="IdentifiersShouldDifferByMoreThanCase" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainUnderscores" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotMatchKeywords" Enabled="True" />
    <Rule Name="OnlyFlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="ParameterNamesShouldMatchBaseDeclaration" Enabled="True" />
    <Rule Name="ParameterNamesShouldNotMatchMemberNames" Enabled="True" />
    <Rule Name="PropertyNamesShouldNotMatchGetMethods" Enabled="True" />
    <Rule Name="ResourceStringCompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="TypeNamesShouldNotMatchNamespaces" Enabled="True" />
    <Rule Name="UsePreferredTerms" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityTransparencyRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Namespaces>
   <Namespace Name="Adenson.Cryptography">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2011-01-20 21:56:56Z">
      <Issue>
       <Item>Adenson.Cryptography</Item>
      </Issue>
     </Message>
     <Message Id="Adenson" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 21:56:56Z">
      <Issue Name="Namespace">
       <Item>Adenson</Item>
       <Item>Adenson.Cryptography</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Adenson.Log">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2011-01-20 21:56:56Z">
      <Issue>
       <Item>Adenson.Log</Item>
      </Issue>
     </Message>
     <Message Id="Adenson" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 21:56:56Z">
      <Issue Name="Namespace">
       <Item>Adenson</Item>
       <Item>Adenson.Log</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Adenson.Net">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2011-01-20 21:56:56Z">
      <Issue>
       <Item>Adenson.Net</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/bin/Debug/Adenson.Core.dll">
    <Modules>
     <Module Name="adenson.core.dll">
      <Namespaces>
       <Namespace Name="Adenson">
        <Types>
         <Type Name="Util">
          <Members>
           <Member Name="#ReadStream(System.IO.Stream)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-21 01:11:12Z">
              <Issue>
               <Item>'Util.ReadStream(Stream)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadStream(System.Uri)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-21 01:11:12Z">
              <Issue>
               <Item>'Util.ReadStream(Uri)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryConvert(System.Object,System.Type,System.Object&amp;)">
            <Messages>
             <Message TypeName="UseGenericsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1007" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Util.TryConvert(object, Type, out object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryConvert(System.String,System.Object&amp;)">
            <Messages>
             <Message TypeName="UseGenericsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1007" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Util.TryConvert(string, out object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryGetBytes(System.String,System.Byte[]&amp;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Util.TryGetBytes(string, out byte[])'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Adenson.Collections">
        <Types>
         <Type Name="Enumerable`1">
          <Messages>
           <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Created="2011-01-21 01:02:21Z">
            <Issue>
             <Item>'Enumerable&lt;T&gt;'</Item>
             <Item>Collection</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#InnerList">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2011-01-21 01:02:21Z">
              <Issue>
               <Item>'List&lt;T&gt;'</Item>
               <Item>'Enumerable&lt;T&gt;.InnerList'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Adenson.Configuration">
        <Types>
         <Type Name="RegistrySettingsProvider">
          <Members>
           <Member Name="#GetPreviousSettings(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <Messages>
             <Message Id="context" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2011-01-21 01:02:21Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'context'</Item>
               <Item>'RegistrySettingsProvider.GetPreviousSettings(SettingsContext, SettingsPropertyCollection)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetSettingRegistryKey(System.Boolean,System.Boolean)">
            <Messages>
             <Message Id="isApplicationScoped" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2011-01-21 01:02:21Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'isApplicationScoped'</Item>
               <Item>'RegistrySettingsProvider.GetSettingRegistryKey(bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SettingKey">
            <Accessors>
             <Accessor Name="#set_SettingKey(System.String)">
              <Messages>
               <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2011-01-20 22:04:56Z">
                <Issue>
                 <Item>'RegistrySettingsProvider.SettingKey.set(string)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Adenson.Cryptography">
        <Types>
         <Type Name="BaseEncryptor">
          <Messages>
           <Message Id="Encryptor" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 22:04:56Z">
            <Issue Name="Type">
             <Item>Encryptor</Item>
             <Item>'BaseEncryptor'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#CreateDecryptor()">
            <Messages>
             <Message Id="Decryptor" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 22:04:56Z">
              <Issue Name="Member">
               <Item>Decryptor</Item>
               <Item>'BaseEncryptor.CreateDecryptor()'</Item>
              </Issue>
             </Message>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2011-01-20 22:04:56Z">
              <Issue Name="IncorrectParameterName">
               <Item>'BaseEncryptor.CreateDecryptor()'</Item>
               <Item>this.Algorithm</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentNullException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateEncryptor()">
            <Messages>
             <Message Id="Encryptor" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 22:04:56Z">
              <Issue Name="Member">
               <Item>Encryptor</Item>
               <Item>'BaseEncryptor.CreateEncryptor()'</Item>
              </Issue>
             </Message>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2011-01-20 22:04:56Z">
              <Issue Name="IncorrectParameterName">
               <Item>'BaseEncryptor.CreateEncryptor()'</Item>
               <Item>this.Algorithm</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentNullException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Encryptor">
          <Messages>
           <Message Id="Encryptor" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 22:04:56Z">
            <Issue Name="Type">
             <Item>Encryptor</Item>
             <Item>'Encryptor'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2011-01-20 22:04:56Z" FixCategory="NonBreaking">
              <Issue Name="NoAllowedExceptions" Level="Error">
               <Item>'Encryptor.Encryptor()'</Item>
               <Item>'InvalidOperationException'</Item>
              </Issue>
             </Message>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Encryptor'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryDecrypt(System.String,System.String&amp;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Encryptor.TryDecrypt(string, out string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="descrypted" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 22:04:56Z">
              <Issue Name="MemberParameter">
               <Item>'Encryptor.TryDecrypt(string, out string)'</Item>
               <Item>descrypted</Item>
               <Item>'descryptedString'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryEncrypt(System.String,System.String&amp;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Encryptor.TryEncrypt(string, out string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="EncryptorType">
          <Messages>
           <Message Id="Encryptor" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 22:04:56Z">
            <Issue Name="Type">
             <Item>Encryptor</Item>
             <Item>'EncryptorType'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#DES">
            <Messages>
             <Message Id="DES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-20 22:04:56Z">
              <Issue Name="Member">
               <Item>DES</Item>
               <Item>'EncryptorType.DES'</Item>
               <Item>Des</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TripleDES">
            <Messages>
             <Message Id="DES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-20 22:04:56Z">
              <Issue Name="Member">
               <Item>DES</Item>
               <Item>'EncryptorType.TripleDES'</Item>
               <Item>Des</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Adenson.Data">
        <Types>
         <Type Name="OdbcParameterCache">
          <Members>
           <Member Name="#GetSpParameterSet(System.String,System.String)">
            <Messages>
             <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:19:11Z">
              <Issue Name="Member">
               <Item>Sp</Item>
               <Item>'OdbcParameterCache.GetSpParameterSet(string, string)'</Item>
               <Item>SP</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetSpParameterSet(System.String,System.String,System.Boolean)">
            <Messages>
             <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:19:11Z">
              <Issue Name="Member">
               <Item>Sp</Item>
               <Item>'OdbcParameterCache.GetSpParameterSet(string, string, bool)'</Item>
               <Item>SP</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="OdbcSqlHelper">
          <Members>
           <Member Name="#CheckTransaction(System.Data.IDbTransaction)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2011-01-21 01:23:41Z">
              <Issue Name="IncorrectParameterName">
               <Item>'OdbcSqlHelper.CheckTransaction(IDbTransaction)'</Item>
               <Item>sqltransaction</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="OleDbParameterCache">
          <Messages>
           <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:19:11Z">
            <Issue Name="Type">
             <Item>Db</Item>
             <Item>'OleDbParameterCache'</Item>
             <Item>DB</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#GetSpParameterSet(System.String,System.String)">
            <Messages>
             <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:19:11Z">
              <Issue Name="Member">
               <Item>Sp</Item>
               <Item>'OleDbParameterCache.GetSpParameterSet(string, string)'</Item>
               <Item>SP</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetSpParameterSet(System.String,System.String,System.Boolean)">
            <Messages>
             <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:19:11Z">
              <Issue Name="Member">
               <Item>Sp</Item>
               <Item>'OleDbParameterCache.GetSpParameterSet(string, string, bool)'</Item>
               <Item>SP</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="OleDbSqlHelper">
          <Messages>
           <Message Id="Db" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:23:41Z">
            <Issue Name="Type">
             <Item>Db</Item>
             <Item>'OleDbSqlHelper'</Item>
             <Item>DB</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#CheckTransaction(System.Data.IDbTransaction)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2011-01-21 01:23:41Z">
              <Issue Name="IncorrectParameterName">
               <Item>'OleDbSqlHelper.CheckTransaction(IDbTransaction)'</Item>
               <Item>command</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Parameter">
          <Messages>
           <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Created="2011-01-20 22:04:56Z">
            <Issue Name="op_Equality">
             <Item>'Parameter'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Equals(System.Object)">
            <Messages>
             <Message TypeName="OverloadOperatorEqualsOnOverridingValueTypeEquals" Category="Microsoft.Usage" CheckId="CA2231" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Parameter'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#op_Implicit(Adenson.Data.Parameter):System.Data.SqlClient.SqlParameter">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-01-20 22:04:56Z">
              <Issue Name="MemberParameter">
               <Item>'Parameter.implicit operator SqlParameter(Parameter)'</Item>
               <Item>param</Item>
               <Item>'param'</Item>
              </Issue>
             </Message>
             <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Created="2011-01-20 22:04:56Z">
              <Issue Name="Multiple">
               <Item>ToXXX</Item>
               <Item>FromXXX</Item>
               <Item>'Parameter.implicit operator SqlParameter(Parameter)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SqlCeHelper">
          <Messages>
           <Message Id="Ce" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:23:41Z">
            <Issue Name="Type">
             <Item>Ce</Item>
             <Item>'SqlCeHelper'</Item>
             <Item>CE</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="SqlClientHelper">
          <Members>
           <Member Name="#CheckCommand(System.Data.IDbCommand)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2011-01-21 01:23:41Z">
              <Issue>
               <Item>'SqlClientHelper.CheckCommand(IDbCommand)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CheckParameters(System.Object[],System.Data.SqlClient.SqlParameter[]&amp;)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2011-01-21 01:23:41Z">
              <Issue Name="IncorrectParameterName">
               <Item>'SqlClientHelper.CheckParameters(object[], out SqlParameter[])'</Item>
               <Item>command</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CheckTransaction(System.Data.IDbTransaction)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2011-01-21 01:23:41Z">
              <Issue Name="IncorrectParameterName">
               <Item>'SqlClientHelper.CheckTransaction(IDbTransaction)'</Item>
               <Item>command</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ExecuteNonQueryBatched(System.String[])">
            <Messages>
             <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Created="2011-01-21 01:23:41Z">
              <Issue Name="IsNullOrEmpty">
               <Item>'string.operator !=(string, string)'</Item>
               <Item>'SqlClientHelper.ExecuteNonQueryBatched(params string[])'</Item>
              </Issue>
              <Issue Name="IsNullOrEmpty">
               <Item>'string.operator ==(string, string)'</Item>
               <Item>'SqlClientHelper.ExecuteNonQueryBatched(params string[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SqlClientParameterCache">
          <Members>
           <Member Name="#GetSpParameterSet(System.String,System.String)">
            <Messages>
             <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:19:11Z">
              <Issue Name="Member">
               <Item>Sp</Item>
               <Item>'SqlClientParameterCache.GetSpParameterSet(string, string)'</Item>
               <Item>SP</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetSpParameterSet(System.String,System.String,System.Boolean)">
            <Messages>
             <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2011-01-21 01:19:11Z">
              <Issue Name="Member">
               <Item>Sp</Item>
               <Item>'SqlClientParameterCache.GetSpParameterSet(string, string, bool)'</Item>
               <Item>SP</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SqlHelperBase">
          <Members>
           <Member Name="#Dispose()">
            <Messages>
             <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Created="2011-01-20 22:04:56Z">
              <Issue Name="DisposeImplementation">
               <Item>'SqlHelperBase.Dispose()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SqlHelperProvider">
          <Members>
           <Member Name="#Create(System.Configuration.ConnectionStringSettings)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2011-01-20 22:04:56Z">
              <Issue Name="IncorrectParameterName">
               <Item>'SqlHelperProvider.Create(ConnectionStringSettings)'</Item>
               <Item>connectionString.ConnectionString</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentNullException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#logger">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'SqlHelperProvider.logger'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Adenson.Log">
        <Types>
         <Type Name="Logger">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Logger'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Dispose()">
            <Messages>
             <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Created="2011-01-20 22:04:56Z">
              <Issue Name="NotCalledWithFinalizer">
               <Item>'Logger.Dispose()'</Item>
               <Item>'GC.SuppressFinalize(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SaveToDatabase()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Logger.SaveToDatabase()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SaveToEntryLog()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Logger.SaveToEntryLog()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SaveToFile()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Logger.SaveToFile()'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'Logger.SaveToFile()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2011-01-20 22:04:56Z">
              <Issue Name="BaseType">
               <Item>'Logger.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Write(Adenson.Log.LogSeverity,System.String,System.Object[])">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Logger.Write(LogSeverity, string, params object[])'</Item>
               <Item>'object'</Item>
              </Issue>
              <Issue>
               <Item>'Logger.Write(LogSeverity, string, params object[])'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Adenson.Net">
        <Types>
         <Type Name="Mailer">
          <Members>
           <Member Name="#Send(System.String,System.Net.Mail.MailMessage,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2011-01-20 22:04:56Z">
              <Issue>
               <Item>'Mailer.Send(string, MailMessage, bool)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
    <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
    <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
    <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   </Rule>
   <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
    <Resolution Name="NotCalledWithFinalizer">Change {0} to call {1}. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
    <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
    <Resolution Name="NoAllowedExceptions">{0} creates an exception of type {1}. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
    <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
    <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
    <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
    <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   </Rule>
   <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
    <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   </Rule>
   <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
    <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   </Rule>
   <Rule TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225">
    <Resolution Name="Multiple">Provide a method named '{0}' or '{1}' as an alternate for operator {2}.</Resolution>
   </Rule>
   <Rule TypeName="OverloadOperatorEqualsOnOverridingValueTypeEquals" Category="Microsoft.Usage" CheckId="CA2231">
    <Resolution Name="Default">Because {0} is a value type that overrides ValueType.Equals, it should also overload the equality and inequality operators (== and !=).</Resolution>
   </Rule>
   <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
    <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   </Rule>
   <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
    <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   </Rule>
   <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
    <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   </Rule>
   <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
    <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   </Rule>
   <Rule TypeName="UseGenericsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1007">
    <Resolution Name="Default">Consider using generics instead of a reference to System.Object in {0}.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
