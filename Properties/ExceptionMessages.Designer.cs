//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Adenson {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Adenson.Properties.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Algorithm property is used for encryption and decryption, and cannot be null..
        /// </summary>
        internal static string AlgorithmNull {
            get {
                return ResourceManager.GetString("AlgorithmNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AllowNulls is set to false, so, collection should not have null values in it..
        /// </summary>
        internal static string AllowNullsFalseNulls {
            get {
                return ResourceManager.GetString("AllowNullsFalseNulls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of the argument in the list can be null..
        /// </summary>
        internal static string ArgumentInListNull {
            get {
                return ResourceManager.GetString("ArgumentInListNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be null..
        /// </summary>
        internal static string ArgumentNull {
            get {
                return ResourceManager.GetString("ArgumentNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be null nor empty..
        /// </summary>
        internal static string ArgumentNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item cannot be cast to &quot;{0}&quot;..
        /// </summary>
        internal static string CastToTypeException {
            get {
                return ResourceManager.GetString("CastToTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confused ChangeType is, converting {0} to {1} not does it..
        /// </summary>
        internal static string ChangeTypeConfused {
            get {
                return ResourceManager.GetString("ChangeTypeConfused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection does not allow null values..
        /// </summary>
        internal static string CollectionsNoNullValues {
            get {
                return ResourceManager.GetString("CollectionsNoNullValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse the command text to automatically generate parameters, pass in appropriate command parameter objects instead..
        /// </summary>
        internal static string CommandTextParse {
            get {
                return ResourceManager.GetString("CommandTextParse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} does not exist at the application startup folder..
        /// </summary>
        internal static string ConfigurationFileNotFound {
            get {
                return ResourceManager.GetString("ConfigurationFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connection string with specified key &apos;{0}&apos; could be found. Check to make sure you have &apos;{1}&apos; or &apos;{2}&apos; in your application startup folder and it contains the specified key. Alternatively, check to make sure you have a connection string section in your configuration file with the specified key. In case you are still using ConnectionStrings.xml, sorry, you will have to rename it to one of the two file names mentioned previously..
        /// </summary>
        internal static string ConnectionStringNotFound {
            get {
                return ResourceManager.GetString("ConnectionStringNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Encryptors need atleast a &apos;TypeName&apos; attribute, and maybe &apos;AssemblyName&apos; attribute..
        /// </summary>
        internal static string CustomEncryptorMissingAttributes {
            get {
                return ResourceManager.GetString("CustomEncryptorMissingAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To email address cannot be null or empty..
        /// </summary>
        internal static string EmailAddressInvalid {
            get {
                return ResourceManager.GetString("EmailAddressInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source cannot be null or empty if LogType contains LogType.EventLog..
        /// </summary>
        internal static string EventLogTypeWithSourceNull {
            get {
                return ResourceManager.GetString("EventLogTypeWithSourceNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key duplicates not allowed..
        /// </summary>
        internal static string KeyDuplicates {
            get {
                return ResourceManager.GetString("KeyDuplicates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a connection string to use to spit out events to database..
        /// </summary>
        internal static string LoggerNoConnString {
            get {
                return ResourceManager.GetString("LoggerNoConnString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, mister developer, cyclic depedency, logger depends on SimpleKeyValueConfigSet..
        /// </summary>
        internal static string LoggerSimpleKeyValueConfigSetCyclic {
            get {
                return ResourceManager.GetString("LoggerSimpleKeyValueConfigSetCyclic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find matching templates for the specified template id..
        /// </summary>
        internal static string MailNoTemplateForId {
            get {
                return ResourceManager.GetString("MailNoTemplateForId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating email from template..
        /// </summary>
        internal static string MailTemplateFailed {
            get {
                return ResourceManager.GetString("MailTemplateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no parameter values in the command text..
        /// </summary>
        internal static string NoCommandParameter {
            get {
                return ResourceManager.GetString("NoCommandParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No encryptor with that key exists..
        /// </summary>
        internal static string NoEncryptorExists {
            get {
                return ResourceManager.GetString("NoEncryptorExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of parameters and the number of parameter values are not the same..
        /// </summary>
        internal static string ParameterCountMismatch {
            get {
                return ResourceManager.GetString("ParameterCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The section is not of DictionarySectionHandler..
        /// </summary>
        internal static string SectionNotDictionarySection {
            get {
                return ResourceManager.GetString("SectionNotDictionarySection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only command type &apos;Text&apos; is supported..
        /// </summary>
        internal static string SqlCommandTypeTextNotSupported {
            get {
                return ResourceManager.GetString("SqlCommandTypeTextNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a {0} implementation, what are you doing passing in a non {0} object..
        /// </summary>
        internal static string SqlImplWrongType {
            get {
                return ResourceManager.GetString("SqlImplWrongType", resourceCulture);
            }
        }
    }
}
